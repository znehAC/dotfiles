#!/usr/bin/env bash
set -euo pipefail

# pastel save script
# saves wallpapers, dotfiles, settings in a clean safe way

SETUP="$HOME/.setup"
DOT="git --git-dir=$HOME/.dotfiles --work-tree=$HOME"

timestamp() {
  date '+%Y-%m-%d %H:%M:%S'
}

log() {
  echo "[$(timestamp)] $*"
}

log "üß∑ starting dotfiles save..."

# ensure setup dir exists
mkdir -p "$SETUP"

## === backup wallpaper ===
wallpaper_src="$HOME/Pictures/wallpaper.jpg"
wallpaper_dst="$SETUP/wallpapers/wallpaper.jpg"

if [ -f "$wallpaper_src" ]; then
  log "üñº backing up wallpaper..."
  mkdir -p "$(dirname "$wallpaper_dst")"
  rsync -a "$wallpaper_src" "$wallpaper_dst"
fi

## === backup fonts ===
font_src="$HOME/.local/share/fonts"
font_dst="$SETUP/fonts"

if [ -d "$font_src" ]; then
  log "üî§ backing up fonts..."
  rsync -a --delete "$font_src/" "$font_dst/"
fi

## === backup user icon ===
icon_src="/var/lib/AccountsService/icons/$USER"
icon_dst="$SETUP/user-icon"

if [ -f "$icon_src" ]; then
  log "üë§ backing up user icon..."
  cp "$icon_src" "$icon_dst"
fi

## === backup firefox desktop entry ===
firefox_src="/usr/share/applications/firefox.desktop"
firefox_dst="$SETUP/firefox/firefox.desktop"

if [ -f "$firefox_src" ]; then
  log "üñá backing up firefox.desktop..."
  mkdir -p "$(dirname "$firefox_dst")"
  cp "$firefox_src" "$firefox_dst"
fi

## === backup firefox user.js ===
profile_dir=$(find "$HOME/.mozilla/firefox" -maxdepth 1 -type d -name "*.default*" | head -n1 || true)

if [ -n "$profile_dir" ] && [ -f "$profile_dir/user.js" ]; then
  log "ü¶ä backing up firefox user.js..."
  cp "$profile_dir/user.js" "$SETUP/firefox/user.js"
fi

## === save package list ===
log "üì¶ saving package list..."
if command -v yay &>/dev/null; then
  yay -Qqe > "$SETUP/pkglist.txt"
elif command -v paru &>/dev/null; then
  paru -Qqe > "$SETUP/pkglist.txt"
else
  log "‚ö†Ô∏è  no yay or paru found, skipping package list backup."
fi

## === backup /etc/environment ===
log "üåç backing up /etc/environment..."
sudo cp /etc/environment "$SETUP/environment"
sudo chown $USER:$USER "$SETUP/environment"

## === backup /etc/greetd/config.toml
mkdir -p "$SETUP/etc/greetd"
sudo cp -r /etc/greetd "$SETUP/etc/greetd"

## === stage dotfiles ===
FILES_TO_TRACK=(
  .zshrc .zshenv .zprofile .bash_profile .gitconfig
  .config/hypr .config/waybar .config/rofi
  .config/swaync .config/fastfetch .config/zsh
  .config/environment.d/
  .config/eww
  .config/gtk-3.0/settings.ini
  .config/gtk-4.0/settings.ini
  .setup/
  .local/bin/
  .local/share/envwrapper
  .local/share/applications/*.desktop
  zsh/*.zsh .config/nvim .config/starship.toml
  .config/xournalapp .config/foot
)

log "üìù staging modified dotfiles..."
for file in "${FILES_TO_TRACK[@]}"; do
  fullpath="$HOME/$file"
  if [ -e "$fullpath" ]; then
    $DOT add "$file"
  fi
done

# list only what actually changed
changed_files=$($DOT diff --name-only --cached)
if [[ -n "$changed_files" ]]; then
  while IFS= read -r file; do
    log "‚ûï $file"
  done <<< "$changed_files"
else
  log "‚ö†Ô∏è  nothing new to stage."
fi



## === commit if anything changed ===
if ! $DOT diff --cached --quiet; then
  log "‚úÖ committing changes..."
  $DOT commit -m "üîí backup: $(timestamp)" >/dev/null
else
  log "‚ö†Ô∏è  nothing new to commit."
fi

if [[ "${1:-}" == "--push" ]]; then
  log "üì° pushing to remote..."
  $DOT push
else
	log "‚úÖ save complete! Run '$DOT push' to sync."
fi
